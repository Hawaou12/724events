{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lamarana\\\\OneDrive\\\\Bureau\\\\project\\\\projet10\\\\Bah_Hawaou_10_14042024\\\\src\\\\containers\\\\Form\\\\index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/button-has-type */\nimport { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Field, { FIELD_TYPES } from \"../../components/Field\";\nimport Select from \"../../components/Select\";\nimport Button, { BUTTON_TYPES } from \"../../components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mockContactApi = () => new Promise(resolve => {\n  setTimeout(resolve, 1000);\n});\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    onSuccess,\n    onError\n  } = _ref;\n  const [sending, setSending] = useState(false);\n  const sendContact = useCallback(async evt => {\n    evt.preventDefault();\n    const data = new FormData(evt.target);\n    console.log(Object.fromEntries(data));\n    setSending(true); // We try to call mockContactApi\n\n    try {\n      await mockContactApi();\n      setSending(false);\n    } catch (err) {\n      setSending(false);\n      onError(err);\n    }\n  }, [onSuccess, onError]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: sendContact,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Nom\",\n          name: \"Nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Pr\\xE9nom\",\n          name: \"Pr\\xE9nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          selection: [\"Personel\", \"Entreprise\"],\n          onChange: () => null,\n          label: \"Personel / Entreprise\",\n          type: \"large\",\n          titleEmpty: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Email\",\n          name: \"Email\",\n          type: FIELD_TYPES.InputEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: BUTTON_TYPES.SUBMIT,\n          disabled: sending,\n          onClick: onSuccess,\n          children: sending ? \"En cours\" : \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"message\",\n          label: \"Message\",\n          type: FIELD_TYPES.TEXTAREA,\n          name: \"msg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"xlCfd/hTPL1r13um4H5Lxem8mPc=\");\n\n_c = Form;\nForm.propTypes = {\n  onError: PropTypes.func,\n  // eslint-disable-next-line react/require-default-props\n  onSuccess: PropTypes.func\n};\nForm.defaultProps = {\n  onError: () => null,\n  onSuccess: () => !null\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/Lamarana/OneDrive/Bureau/project/projet10/Bah_Hawaou_10_14042024/src/containers/Form/index.js"],"names":["useCallback","useState","PropTypes","Field","FIELD_TYPES","Select","Button","BUTTON_TYPES","mockContactApi","Promise","resolve","setTimeout","Form","onSuccess","onError","sending","setSending","sendContact","evt","preventDefault","data","FormData","target","console","log","Object","fromEntries","err","InputEmail","SUBMIT","TEXTAREA","propTypes","func","defaultProps"],"mappings":";;;AAAA;AACA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,wBAAnC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,IAAiBC,YAAjB,QAAqC,yBAArC;;;AAEA,MAAMC,cAAc,GAAG,MACrB,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACvBC,EAAAA,UAAU,CAACD,OAAD,EAAU,IAAV,CAAV;AACD,CAFD,CADF;;AAKA,MAAME,IAAI,GAAG,QAA4B;AAAA;;AAAA,MAA3B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA2B;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMgB,WAAW,GAAGjB,WAAW,CAC7B,MAAOkB,GAAP,IAAe;AACbA,IAAAA,GAAG,CAACC,cAAJ;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAaH,GAAG,CAACI,MAAjB,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,WAAP,CAAmBN,IAAnB,CAAZ;AAEAJ,IAAAA,UAAU,CAAC,IAAD,CAAV,CALa,CAMb;;AACA,QAAI;AACF,YAAMR,cAAc,EAApB;AACAQ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD,CAGE,OAAOW,GAAP,EAAY;AACZX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,OAAO,CAACa,GAAD,CAAP;AACD;AACF,GAf4B,EAgB7B,CAACd,SAAD,EAAYC,OAAZ,CAhB6B,CAA/B;AAmBA,sBACE;AAAM,IAAA,QAAQ,EAAEG,WAAhB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC,EAAnB;AAAsB,UAAA,KAAK,EAAC,KAA5B;AAAkC,UAAA,IAAI,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC,EAAnB;AAAsB,UAAA,KAAK,EAAC,WAA5B;AAAqC,UAAA,IAAI,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,MAAD;AACE,UAAA,SAAS,EAAE,CAAC,UAAD,EAAa,YAAb,CADb;AAEE,UAAA,QAAQ,EAAE,MAAM,IAFlB;AAGE,UAAA,KAAK,EAAC,uBAHR;AAIE,UAAA,IAAI,EAAC,OAJP;AAKE,UAAA,UAAU;AALZ;AAAA;AAAA;AAAA;AAAA,gBAJF,eAYE,QAAC,KAAD;AACE,UAAA,WAAW,EAAC,EADd;AAEE,UAAA,KAAK,EAAC,OAFR;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,IAAI,EAAEb,WAAW,CAACwB;AAJpB;AAAA;AAAA;AAAA;AAAA,gBAZF,eAkBE,QAAC,MAAD;AACE,UAAA,IAAI,EAAErB,YAAY,CAACsB,MADrB;AAEE,UAAA,QAAQ,EAAEd,OAFZ;AAGE,UAAA,OAAO,EAAEF,SAHX;AAAA,oBAKGE,OAAO,GAAG,UAAH,GAAgB;AAL1B;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA2BE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,WAAW,EAAC,SADd;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,IAAI,EAAEX,WAAW,CAAC0B,QAHpB;AAIE,UAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CA9DD;;GAAMlB,I;;KAAAA,I;AAgENA,IAAI,CAACmB,SAAL,GAAiB;AACfjB,EAAAA,OAAO,EAAEZ,SAAS,CAAC8B,IADJ;AAEf;AACAnB,EAAAA,SAAS,EAAEX,SAAS,CAAC8B;AAHN,CAAjB;AAMApB,IAAI,CAACqB,YAAL,GAAoB;AAClBnB,EAAAA,OAAO,EAAE,MAAM,IADG;AAElBD,EAAAA,SAAS,EAAE,MAAM,CAAC;AAFA,CAApB","sourcesContent":["/* eslint-disable react/button-has-type */\nimport { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Field, { FIELD_TYPES } from \"../../components/Field\";\nimport Select from \"../../components/Select\";\nimport Button, { BUTTON_TYPES } from \"../../components/Button\";\n\nconst mockContactApi = () =>\n  new Promise((resolve) => {\n    setTimeout(resolve, 1000);\n  });\n\nconst Form = ({ onSuccess, onError }) => {\n  const [sending, setSending] = useState(false);\n\n  const sendContact = useCallback(\n    async (evt) => {\n      evt.preventDefault();\n      const data = new FormData(evt.target);\n      console.log(Object.fromEntries(data));\n\n      setSending(true);\n      // We try to call mockContactApi\n      try {\n        await mockContactApi();\n        setSending(false);\n      } catch (err) {\n        setSending(false);\n        onError(err);\n      }\n    },\n    [onSuccess, onError]\n  );\n\n  return (\n    <form onSubmit={sendContact}>\n      <div className=\"row\">\n        <div className=\"col\">\n          <Field placeholder=\"\" label=\"Nom\" name=\"Nom\" />\n\n          <Field placeholder=\"\" label=\"Prénom\" name=\"Prénom\" />\n          <Select\n            selection={[\"Personel\", \"Entreprise\"]}\n            onChange={() => null}\n            label=\"Personel / Entreprise\"\n            type=\"large\"\n            titleEmpty\n          />\n\n          <Field\n            placeholder=\"\"\n            label=\"Email\"\n            name=\"Email\"\n            type={FIELD_TYPES.InputEmail}\n          />\n          <Button\n            type={BUTTON_TYPES.SUBMIT}\n            disabled={sending}\n            onClick={onSuccess}\n          >\n            {sending ? \"En cours\" : \"Envoyer\"}\n          </Button>\n        </div>\n        <div className=\"col\">\n          <Field\n            placeholder=\"message\"\n            label=\"Message\"\n            type={FIELD_TYPES.TEXTAREA}\n            name=\"msg\"\n          />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  onError: PropTypes.func,\n  // eslint-disable-next-line react/require-default-props\n  onSuccess: PropTypes.func,\n};\n\nForm.defaultProps = {\n  onError: () => null,\n  onSuccess: () => !null,\n};\n"]},"metadata":{},"sourceType":"module"}